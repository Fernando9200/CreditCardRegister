{"ast":null,"code":"var _jsxFileName = \"/home/fernando/credit-card-register/src/CardManager/AddCard/AddCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport Card from '../../components/Card';\nimport CardForm from '../../components/CardForm';\nimport { updateLocalStorageCards } from '../CreditCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  id: '',\n  cardNumber: '',\n  cardHolder: '',\n  cardMonth: '',\n  cardYear: '',\n  cardCvv: ''\n};\nexport default function AddCard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [state, setState] = useState(initialState);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const updateStateValues = useCallback((keyName, value) => {\n    setState({ ...state,\n      [keyName]: value || ''\n    });\n  }, [state]);\n\n  function handleSubmitAction() {\n    try {\n      let newCardsList = [];\n\n      if (localStorage.getItem('cards')) {\n        var _localStorage$getItem;\n\n        const storageCards = JSON.parse((_localStorage$getItem = localStorage.getItem('cards')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '');\n        newCardsList = storageCards ? [...storageCards] : [];\n      }\n\n      newCardsList.push({ ...state,\n        id: uuid()\n      });\n      updateLocalStorageCards(newCardsList);\n      navigate('/');\n    } catch (error) {\n      alert(error);\n      console.log(error);\n    } finally {//release resources or stop loader\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CardForm, {\n          selectedCreditCard: state,\n          onUpdateState: updateStateValues,\n          setIsCardFlipped: setIsCardFlipped,\n          handleSubmitAction: handleSubmitAction,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            cardNumber: state.cardNumber,\n            cardHolder: state.cardHolder,\n            cardMonth: state.cardMonth,\n            cardYear: state.cardYear,\n            cardCvv: state.cardCvv,\n            isCardFlipped: isCardFlipped\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"68buSCVaxqDaXi0HRTfqqk0nqZM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/home/fernando/credit-card-register/src/CardManager/AddCard/AddCard.tsx"],"names":["React","Fragment","useCallback","useState","useNavigate","v4","uuid","Card","CardForm","updateLocalStorageCards","initialState","id","cardNumber","cardHolder","cardMonth","cardYear","cardCvv","AddCard","navigate","state","setState","isCardFlipped","setIsCardFlipped","updateStateValues","keyName","value","handleSubmitAction","newCardsList","localStorage","getItem","storageCards","JSON","parse","push","error","alert","console","log"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport Card from '../../components/Card';\nimport CardForm from '../../components/CardForm';\nimport { CreditCard, updateLocalStorageCards } from '../CreditCard';\n\nconst initialState: CreditCard = {\n  id: '',\n  cardNumber: '',\n  cardHolder: '',\n  cardMonth: '',\n  cardYear: '',\n  cardCvv: '',\n};\n\nexport default function AddCard() {\n  const navigate = useNavigate();\n  const [state, setState] = useState<CreditCard>(initialState);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n\n  const updateStateValues = useCallback(\n    (keyName, value) => {\n      setState({\n        ...state,\n        [keyName]: value || '',\n      });\n    },\n    [state],\n  );\n\n  function handleSubmitAction() {\n    try {\n      let newCardsList: CreditCard[] = [];\n      if (localStorage.getItem('cards')) {\n        const storageCards = JSON.parse(localStorage.getItem('cards') ?? '');\n        newCardsList = storageCards ? [...storageCards] : [];\n      }\n\n      newCardsList.push({\n        ...state,\n        id: uuid(),\n      });\n      updateLocalStorageCards(newCardsList);\n      navigate('/');\n    } catch (error: any) {\n      alert(error);\n      console.log(error);\n    } finally {\n      //release resources or stop loader\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"add-card-content\">\n        <div className=\"wrapper\">\n          <CardForm\n            selectedCreditCard={state}\n            onUpdateState={updateStateValues}\n            setIsCardFlipped={setIsCardFlipped}\n            handleSubmitAction={handleSubmitAction}\n          >\n            <Card\n              cardNumber={state.cardNumber}\n              cardHolder={state.cardHolder}\n              cardMonth={state.cardMonth}\n              cardYear={state.cardYear}\n              cardCvv={state.cardCvv}\n              isCardFlipped={isCardFlipped}\n            ></Card>\n          </CardForm>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}