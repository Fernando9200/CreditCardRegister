{"ast":null,"code":"var _jsxFileName = \"/home/fernando/credit-card-register/src/components/CardForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentYear = new Date().getFullYear();\nconst monthsArr = Array.from({\n  length: 12\n}, (x, i) => {\n  const month = i + 1;\n  return month <= 9 ? '0' + month : month;\n});\nconst yearsArr = Array.from({\n  length: 9\n}, (_x, i) => currentYear + i);\nexport default function CardForm(props) {\n  _s();\n\n  const {\n    selectedCreditCard,\n    onUpdateState,\n    setIsCardFlipped,\n    handleSubmitAction,\n    children\n  } = props;\n  const [errors, setErrors] = useState({\n    id: '',\n    cardNumber: '',\n    cardHolder: '',\n    cardMonth: '',\n    cardYear: '',\n    cardCvv: ''\n  });\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    onUpdateState(name, value);\n  };\n\n  const handleFormChangeNumbers = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (isNaN(Number(value))) return; //only accept numbers\n\n    onUpdateState(name, value);\n  };\n\n  const onCvvFocus = () => {\n    setIsCardFlipped(true);\n  };\n\n  const onCvvBlur = () => {\n    setIsCardFlipped(false);\n  };\n\n  const handleConfirmAction = e => {\n    // validate errors\n    if (!isFormHasErrors()) {\n      handleSubmitAction();\n    }\n  };\n\n  const isFormHasErrors = () => {\n    const newErrors = {\n      id: '',\n      cardNumber: '',\n      cardHolder: '',\n      cardMonth: '',\n      cardYear: '',\n      cardCvv: ''\n    }; //first validate blank fields\n\n    let isErrorFlag = false;\n    Object.keys(newErrors).forEach(function (key) {\n      const keyPair = key;\n      const displayableKeyName = key.toLowerCase().replace('card', 'Card ');\n\n      if (!selectedCreditCard[keyPair]) {\n        newErrors[keyPair] = `${displayableKeyName} value required.`;\n        isErrorFlag = true;\n      } else {\n        newErrors[keyPair] = '';\n        isErrorFlag = false;\n      }\n    });\n\n    if (isErrorFlag) {\n      setErrors(newErrors);\n      return isErrorFlag;\n    } //if no blank field then check other validation\n\n\n    if (selectedCreditCard['cardNumber'].length !== 16) {\n      newErrors.cardNumber = 'Card number should be 16 digits';\n      isErrorFlag = true;\n    }\n\n    if (selectedCreditCard['cardCvv'].length !== 4) {\n      newErrors.cardCvv = 'Card number should be 4 digits';\n      isErrorFlag = true;\n    }\n\n    setErrors(newErrors);\n    return isErrorFlag;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-form__inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardNumber\",\n          className: \"card-input__label\",\n          children: \"Card Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"cardNumber\",\n          className: \"card-input__input\",\n          autoComplete: \"off\",\n          onChange: handleFormChangeNumbers,\n          maxLength: 16,\n          value: selectedCreditCard.cardNumber,\n          isInvalid: !!errors.cardNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: errors.cardNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardName\",\n          className: \"card-input__label\",\n          children: \"Card Holder Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          className: \"card-input__input\",\n          autoComplete: \"off\",\n          name: \"cardHolder\",\n          onChange: handleFormChange,\n          value: selectedCreditCard.cardHolder,\n          isInvalid: !!errors.cardHolder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: errors.cardHolder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-form__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-form__col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-form__group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardMonth\",\n              className: \"card-input__label\",\n              children: \"Expiration Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              className: \"card-input__input -select\",\n              value: selectedCreditCard.cardMonth,\n              name: \"cardMonth\",\n              onChange: handleFormChange,\n              isInvalid: !!errors.cardMonth,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), monthsArr.map((val, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val,\n                children: val\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.cardMonth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"cardYear\",\n              className: \"card-input__input -select\",\n              value: selectedCreditCard.cardYear,\n              onChange: handleFormChange,\n              isInvalid: !!errors.cardYear,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), yearsArr.map((val, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val,\n                children: val\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.cardYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-form__col -cvv\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardCvv\",\n              className: \"card-input__label\",\n              children: \"CVV (Security Code)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"card-input__input\",\n              maxLength: 4,\n              autoComplete: \"off\",\n              name: \"cardCvv\",\n              value: selectedCreditCard.cardCvv,\n              onChange: handleFormChangeNumbers,\n              onFocus: onCvvFocus,\n              onBlur: onCvvBlur,\n              isInvalid: !!errors.cardCvv\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.cardCvv\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-form__row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-form__col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              onClick: handleConfirmAction,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardForm, \"/xFDBJG7GdTw4BT5U2ZenMWMSw4=\");\n\n_c = CardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"sources":["/home/fernando/credit-card-register/src/components/CardForm/index.tsx"],"names":["React","useState","Button","Form","currentYear","Date","getFullYear","monthsArr","Array","from","length","x","i","month","yearsArr","_x","CardForm","props","selectedCreditCard","onUpdateState","setIsCardFlipped","handleSubmitAction","children","errors","setErrors","id","cardNumber","cardHolder","cardMonth","cardYear","cardCvv","handleFormChange","event","name","value","target","handleFormChangeNumbers","isNaN","Number","onCvvFocus","onCvvBlur","handleConfirmAction","e","isFormHasErrors","newErrors","isErrorFlag","Object","keys","forEach","key","keyPair","displayableKeyName","toLowerCase","replace","map","val","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { CreditCard } from '../../CardManager/CreditCard';\n\nconst currentYear = new Date().getFullYear();\nconst monthsArr = Array.from({ length: 12 }, (x, i) => {\n  const month = i + 1;\n  return month <= 9 ? '0' + month : month;\n});\nconst yearsArr = Array.from({ length: 9 }, (_x, i) => currentYear + i);\ninterface CardFormProps {\n  selectedCreditCard: CreditCard;\n  onUpdateState: any;\n  setIsCardFlipped: React.Dispatch<React.SetStateAction<boolean>>;\n  handleSubmitAction: () => void;\n  children: any;\n}\nexport default function CardForm(props: CardFormProps) {\n  const {\n    selectedCreditCard,\n    onUpdateState,\n    setIsCardFlipped,\n    handleSubmitAction,\n    children,\n  } = props;\n  const [errors, setErrors] = useState<CreditCard>({\n    id: '',\n    cardNumber: '',\n    cardHolder: '',\n    cardMonth: '',\n    cardYear: '',\n    cardCvv: '',\n  });\n\n  const handleFormChange = (event: {\n    target: { name: string; value: string };\n  }) => {\n    const { name, value } = event.target;\n\n    onUpdateState(name, value);\n  };\n\n  const handleFormChangeNumbers = (event: {\n    target: { value: string; name: string };\n  }) => {\n    const { name, value } = event.target;\n    if (isNaN(Number(value))) return; //only accept numbers\n    onUpdateState(name, value);\n  };\n\n  const onCvvFocus = () => {\n    setIsCardFlipped(true);\n  };\n\n  const onCvvBlur = () => {\n    setIsCardFlipped(false);\n  };\n\n  const handleConfirmAction = (e: any) => {\n    // validate errors\n    if (!isFormHasErrors()) {\n      handleSubmitAction();\n    }\n  };\n  const isFormHasErrors = () => {\n    const newErrors: CreditCard = {\n      id: '',\n      cardNumber: '',\n      cardHolder: '',\n      cardMonth: '',\n      cardYear: '',\n      cardCvv: '',\n    };\n    //first validate blank fields\n    let isErrorFlag = false;\n    Object.keys(newErrors).forEach(function (key: any) {\n      const keyPair = key as keyof CreditCard;\n      const displayableKeyName = key.toLowerCase().replace('card', 'Card ');\n      if (!selectedCreditCard[keyPair]) {\n        newErrors[keyPair] = `${displayableKeyName} value required.`;\n        isErrorFlag = true;\n      } else {\n        newErrors[keyPair] = '';\n        isErrorFlag = false;\n      }\n    });\n    if (isErrorFlag) {\n      setErrors(newErrors);\n      return isErrorFlag;\n    }\n    //if no blank field then check other validation\n    if (selectedCreditCard['cardNumber'].length !== 16) {\n      newErrors.cardNumber = 'Card number should be 16 digits';\n      isErrorFlag = true;\n    }\n    if (selectedCreditCard['cardCvv'].length !== 4) {\n      newErrors.cardCvv = 'Card number should be 4 digits';\n      isErrorFlag = true;\n    }\n    setErrors(newErrors);\n    return isErrorFlag;\n  };\n\n  return (\n    <div className=\"card-form\">\n      <div className=\"card-list\">{children}</div>\n      <div className=\"card-form__inner\">\n        <div className=\"card-input\">\n          <label htmlFor=\"cardNumber\" className=\"card-input__label\">\n            Card Number\n          </label>\n          <Form.Control\n            type=\"text\"\n            name=\"cardNumber\"\n            className=\"card-input__input\"\n            autoComplete=\"off\"\n            onChange={handleFormChangeNumbers}\n            maxLength={16}\n            value={selectedCreditCard.cardNumber}\n            isInvalid={!!errors.cardNumber}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.cardNumber}\n          </Form.Control.Feedback>\n        </div>\n\n        <div className=\"card-input\">\n          <label htmlFor=\"cardName\" className=\"card-input__label\">\n            Card Holder Name\n          </label>\n          <Form.Control\n            type=\"text\"\n            className=\"card-input__input\"\n            autoComplete=\"off\"\n            name=\"cardHolder\"\n            onChange={handleFormChange}\n            value={selectedCreditCard.cardHolder}\n            isInvalid={!!errors.cardHolder}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.cardHolder}\n          </Form.Control.Feedback>\n        </div>\n\n        <div className=\"card-form__row\">\n          <div className=\"card-form__col\">\n            <div className=\"card-form__group\">\n              <label htmlFor=\"cardMonth\" className=\"card-input__label\">\n                Expiration Date\n              </label>\n              <Form.Control\n                as=\"select\"\n                className=\"card-input__input -select\"\n                value={selectedCreditCard.cardMonth}\n                name=\"cardMonth\"\n                onChange={handleFormChange}\n                isInvalid={!!errors.cardMonth}\n              >\n                <option value=\"\" disabled>\n                  Month\n                </option>\n\n                {monthsArr.map((val, index) => (\n                  <option key={index} value={val}>\n                    {val}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.cardMonth}\n              </Form.Control.Feedback>\n              <Form.Control\n                as=\"select\"\n                name=\"cardYear\"\n                className=\"card-input__input -select\"\n                value={selectedCreditCard.cardYear}\n                onChange={handleFormChange}\n                isInvalid={!!errors.cardYear}\n              >\n                <option value=\"\" disabled>\n                  Year\n                </option>\n\n                {yearsArr.map((val, index) => (\n                  <option key={index} value={val}>\n                    {val}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.cardYear}\n              </Form.Control.Feedback>\n            </div>\n          </div>\n          <div className=\"card-form__col -cvv\">\n            <div className=\"card-input\">\n              <label htmlFor=\"cardCvv\" className=\"card-input__label\">\n                CVV (Security Code)\n              </label>\n              <Form.Control\n                type=\"text\"\n                className=\"card-input__input\"\n                maxLength={4}\n                autoComplete=\"off\"\n                name=\"cardCvv\"\n                value={selectedCreditCard.cardCvv}\n                onChange={handleFormChangeNumbers}\n                onFocus={onCvvFocus}\n                onBlur={onCvvBlur}\n                isInvalid={!!errors.cardCvv}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.cardCvv}\n              </Form.Control.Feedback>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-form__row\">\n          <div className=\"card-form__col\">\n            <div className=\"d-grid gap-2\">\n              <Button variant=\"primary\" size=\"lg\" onClick={handleConfirmAction}>\n                Confirm\n              </Button>{' '}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}